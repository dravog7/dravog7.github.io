{"version":3,"file":"main.js","sources":["../node_modules/svelte/internal.mjs","../node_modules/svelte/store.mjs","../node_modules/svelte-router-spa/src/store.js","../node_modules/url-params-parser/index.js","../node_modules/url-params-parser/url_parser.js","../node_modules/svelte-router-spa/src/lib/utils.js","../node_modules/svelte-router-spa/src/router/current.js","../node_modules/svelte-router-spa/src/router/guard.js","../node_modules/svelte-router-spa/src/router/redirect.js","../node_modules/svelte-router-spa/src/router/route.js","../node_modules/svelte-router-spa/src/router/path.js","../node_modules/svelte-router-spa/src/router/finder.js","../node_modules/svelte-router-spa/src/spa_router.js","../node_modules/svelte-router-spa/src/components/route.svelte","../node_modules/svelte-router-spa/src/components/router.svelte","../node_modules/svelte-router-spa/src/components/navigate.svelte","../node_modules/svelte-router-spa/src/index.js","../src/route.js","../src/App.svelte","../src/main.js"],"sourcesContent":["function noop() {}\n\nconst identity = x => x;\n\nfunction assign(tar, src) {\n\tfor (const k in src) tar[k] = src[k];\n\treturn tar;\n}\n\nfunction is_promise(value) {\n\treturn value && typeof value.then === 'function';\n}\n\nfunction add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nfunction run(fn) {\n\treturn fn();\n}\n\nfunction blank_object() {\n\treturn Object.create(null);\n}\n\nfunction run_all(fns) {\n\tfns.forEach(run);\n}\n\nfunction is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\nfunction safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\n\nfunction not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\nfunction validate_store(store, name) {\n\tif (!store || typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nfunction subscribe(component, store, callback) {\n\tconst unsub = store.subscribe(callback);\n\n\tcomponent.$$.on_destroy.push(unsub.unsubscribe\n\t\t? () => unsub.unsubscribe()\n\t\t: unsub);\n}\n\nfunction create_slot(definition, ctx, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, fn) {\n\treturn definition[1]\n\t\t? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n\t\t: ctx.$$scope.ctx;\n}\n\nfunction get_slot_changes(definition, ctx, changed, fn) {\n\treturn definition[1]\n\t\t? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n\t\t: ctx.$$scope.changed || {};\n}\n\nfunction exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\nconst tasks = new Set();\nlet running = false;\n\nfunction run_tasks() {\n\ttasks.forEach(task => {\n\t\tif (!task[0](window.performance.now())) {\n\t\t\ttasks.delete(task);\n\t\t\ttask[1]();\n\t\t}\n\t});\n\n\trunning = tasks.size > 0;\n\tif (running) requestAnimationFrame(run_tasks);\n}\n\nfunction clear_loops() {\n\t// for testing...\n\ttasks.forEach(task => tasks.delete(task));\n\trunning = false;\n}\n\nfunction loop(fn) {\n\tlet task;\n\n\tif (!running) {\n\t\trunning = true;\n\t\trequestAnimationFrame(run_tasks);\n\t}\n\n\treturn {\n\t\tpromise: new Promise(fulfil => {\n\t\t\ttasks.add(task = [fn, fulfil]);\n\t\t}),\n\t\tabort() {\n\t\t\ttasks.delete(task);\n\t\t}\n\t};\n}\n\nfunction append(target, node) {\n\ttarget.appendChild(node);\n}\n\nfunction insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\nfunction detach(node) {\n\tnode.parentNode.removeChild(node);\n}\n\nfunction detach_between(before, after) {\n\twhile (before.nextSibling && before.nextSibling !== after) {\n\t\tbefore.parentNode.removeChild(before.nextSibling);\n\t}\n}\n\nfunction detach_before(after) {\n\twhile (after.previousSibling) {\n\t\tafter.parentNode.removeChild(after.previousSibling);\n\t}\n}\n\nfunction detach_after(before) {\n\twhile (before.nextSibling) {\n\t\tbefore.parentNode.removeChild(before.nextSibling);\n\t}\n}\n\nfunction destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\nfunction element(name) {\n\treturn document.createElement(name);\n}\n\nfunction object_without_properties(obj, exclude) {\n\tconst target = {};\n\tfor (const k in obj) {\n\t\tif (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) {\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\nfunction svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\nfunction text(data) {\n\treturn document.createTextNode(data);\n}\n\nfunction space() {\n\treturn text(' ');\n}\n\nfunction empty() {\n\treturn text('');\n}\n\nfunction listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\nfunction prevent_default(fn) {\n\treturn function(event) {\n\t\tevent.preventDefault();\n\t\treturn fn.call(this, event);\n\t};\n}\n\nfunction stop_propagation(fn) {\n\treturn function(event) {\n\t\tevent.stopPropagation();\n\t\treturn fn.call(this, event);\n\t};\n}\n\nfunction attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse node.setAttribute(attribute, value);\n}\n\nfunction set_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tif (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key in node) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\nfunction set_custom_element_data(node, prop, value) {\n\tif (prop in node) {\n\t\tnode[prop] = value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\nfunction xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\nfunction get_binding_group_value(group) {\n\tconst value = [];\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.push(group[i].__value);\n\t}\n\treturn value;\n}\n\nfunction to_number(value) {\n\treturn value === '' ? undefined : +value;\n}\n\nfunction time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\nfunction children(element) {\n\treturn Array.from(element.childNodes);\n}\n\nfunction claim_element(nodes, name, attributes, svg) {\n\tfor (let i = 0; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeName === name) {\n\t\t\tfor (let j = 0; j < node.attributes.length; j += 1) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) node.removeAttribute(attribute.name);\n\t\t\t}\n\t\t\treturn nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n\t\t}\n\t}\n\n\treturn svg ? svg_element(name) : element(name);\n}\n\nfunction claim_text(nodes, data) {\n\tfor (let i = 0; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 3) {\n\t\t\tnode.data = data;\n\t\t\treturn nodes.splice(i, 1)[0];\n\t\t}\n\t}\n\n\treturn text(data);\n}\n\nfunction set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data !== data) text.data = data;\n}\n\nfunction set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\nfunction set_style(node, key, value) {\n\tnode.style.setProperty(key, value);\n}\n\nfunction select_option(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n}\n\nfunction select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nfunction select_value(select) {\n\tconst selected_option = select.querySelector(':checked') || select.options[0];\n\treturn selected_option && selected_option.__value;\n}\n\nfunction select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n\nfunction add_resize_listener(element, fn) {\n\tif (getComputedStyle(element).position === 'static') {\n\t\telement.style.position = 'relative';\n\t}\n\n\tconst object = document.createElement('object');\n\tobject.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n\tobject.type = 'text/html';\n\n\tlet win;\n\n\tobject.onload = () => {\n\t\twin = object.contentDocument.defaultView;\n\t\twin.addEventListener('resize', fn);\n\t};\n\n\tif (/Trident/.test(navigator.userAgent)) {\n\t\telement.appendChild(object);\n\t\tobject.data = 'about:blank';\n\t} else {\n\t\tobject.data = 'about:blank';\n\t\telement.appendChild(object);\n\t}\n\n\treturn {\n\t\tcancel: () => {\n\t\t\twin && win.removeEventListener && win.removeEventListener('resize', fn);\n\t\t\telement.removeChild(object);\n\t\t}\n\t};\n}\n\nfunction toggle_class(element, name, toggle) {\n\telement.classList[toggle ? 'add' : 'remove'](name);\n}\n\nfunction custom_event(type, detail) {\n\tconst e = document.createEvent('CustomEvent');\n\te.initCustomEvent(type, false, false, detail);\n\treturn e;\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n\tlet hash = 5381;\n\tlet i = str.length;\n\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn hash >>> 0;\n}\n\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n\tconst step = 16.666 / duration;\n\tlet keyframes = '{\\n';\n\n\tfor (let p = 0; p <= 1; p += step) {\n\t\tconst t = a + (b - a) * ease(p);\n\t\tkeyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n\t}\n\n\tconst rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n\tconst name = `__svelte_${hash(rule)}_${uid}`;\n\n\tif (!current_rules[name]) {\n\t\tif (!stylesheet) {\n\t\t\tconst style = element('style');\n\t\t\tdocument.head.appendChild(style);\n\t\t\tstylesheet = style.sheet;\n\t\t}\n\n\t\tcurrent_rules[name] = true;\n\t\tstylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n\t}\n\n\tconst animation = node.style.animation || '';\n\tnode.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n\n\tactive += 1;\n\treturn name;\n}\n\nfunction delete_rule(node, name) {\n\tnode.style.animation = (node.style.animation || '')\n\t\t.split(', ')\n\t\t.filter(name\n\t\t\t? anim => anim.indexOf(name) < 0 // remove specific animation\n\t\t\t: anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n\t\t)\n\t\t.join(', ');\n\n\tif (name && !--active) clear_rules();\n}\n\nfunction clear_rules() {\n\trequestAnimationFrame(() => {\n\t\tif (active) return;\n\t\tlet i = stylesheet.cssRules.length;\n\t\twhile (i--) stylesheet.deleteRule(i);\n\t\tcurrent_rules = {};\n\t});\n}\n\nfunction create_animation(node, from, fn, params) {\n\tif (!from) return noop;\n\n\tconst to = node.getBoundingClientRect();\n\tif (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom) return noop;\n\n\tconst {\n\t\tdelay = 0,\n\t\tduration = 300,\n\t\teasing = identity,\n\t\tstart: start_time = window.performance.now() + delay,\n\t\tend = start_time + duration,\n\t\ttick = noop,\n\t\tcss\n\t} = fn(node, { from, to }, params);\n\n\tlet running = true;\n\tlet started = false;\n\tlet name;\n\n\tconst css_text = node.style.cssText;\n\n\tfunction start() {\n\t\tif (css) {\n\t\t\tif (delay) node.style.cssText = css_text; // TODO create delayed animation instead?\n\t\t\tname = create_rule(node, 0, 1, duration, 0, easing, css);\n\t\t}\n\n\t\tstarted = true;\n\t}\n\n\tfunction stop() {\n\t\tif (css) delete_rule(node, name);\n\t\trunning = false;\n\t}\n\n\tloop(now => {\n\t\tif (!started && now >= start_time) {\n\t\t\tstart();\n\t\t}\n\n\t\tif (started && now >= end) {\n\t\t\ttick(1, 0);\n\t\t\tstop();\n\t\t}\n\n\t\tif (!running) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (started) {\n\t\t\tconst p = now - start_time;\n\t\t\tconst t = 0 + 1 * easing(p / duration);\n\t\t\ttick(t, 1 - t);\n\t\t}\n\n\t\treturn true;\n\t});\n\n\tif (delay) {\n\t\tif (css) node.style.cssText += css(0, 1);\n\t} else {\n\t\tstart();\n\t}\n\n\ttick(0, 1);\n\n\treturn stop;\n}\n\nfunction fix_position(node) {\n\tconst style = getComputedStyle(node);\n\n\tif (style.position !== 'absolute' && style.position !== 'fixed') {\n\t\tconst { width, height } = style;\n\t\tconst a = node.getBoundingClientRect();\n\t\tnode.style.position = 'absolute';\n\t\tnode.style.width = width;\n\t\tnode.style.height = height;\n\t\tconst b = node.getBoundingClientRect();\n\n\t\tif (a.left !== b.left || a.top !== b.top) {\n\t\t\tconst style = getComputedStyle(node);\n\t\t\tconst transform = style.transform === 'none' ? '' : style.transform;\n\n\t\t\tnode.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n\t\t}\n\t}\n}\n\nlet current_component;\n\nfunction set_current_component(component) {\n\tcurrent_component = component;\n}\n\nfunction get_current_component() {\n\tif (!current_component) throw new Error(`Function called outside component initialization`);\n\treturn current_component;\n}\n\nfunction beforeUpdate(fn) {\n\tget_current_component().$$.before_render.push(fn);\n}\n\nfunction onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\nfunction afterUpdate(fn) {\n\tget_current_component().$$.after_render.push(fn);\n}\n\nfunction onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\nfunction createEventDispatcher() {\n\tconst component = current_component;\n\n\treturn (type, detail) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(type, detail);\n\t\t\tcallbacks.slice().forEach(fn => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t}\n\t};\n}\n\nfunction setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n}\n\nfunction getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\n\tif (callbacks) {\n\t\tcallbacks.slice().forEach(fn => fn(event));\n\t}\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\n\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\n\nfunction schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\nfunction tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\nfunction add_binding_callback(fn) {\n\tbinding_callbacks.push(fn);\n}\n\nfunction add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\nfunction add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\nfunction flush() {\n\tconst seen_callbacks = new Set();\n\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\twhile (dirty_components.length) {\n\t\t\tconst component = dirty_components.shift();\n\t\t\tset_current_component(component);\n\t\t\tupdate(component.$$);\n\t\t}\n\n\t\twhile (binding_callbacks.length) binding_callbacks.shift()();\n\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\twhile (render_callbacks.length) {\n\t\t\tconst callback = render_callbacks.pop();\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\tcallback();\n\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t}\n\t\t}\n\t} while (dirty_components.length);\n\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\n\tupdate_scheduled = false;\n}\n\nfunction update($$) {\n\tif ($$.fragment) {\n\t\t$$.update($$.dirty);\n\t\trun_all($$.before_render);\n\t\t$$.fragment.p($$.dirty, $$.ctx);\n\t\t$$.dirty = null;\n\n\t\t$$.after_render.forEach(add_render_callback);\n\t}\n}\n\nlet promise;\n\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\n\treturn promise;\n}\n\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nlet outros;\n\nfunction group_outros() {\n\toutros = {\n\t\tremaining: 0,\n\t\tcallbacks: []\n\t};\n}\n\nfunction check_outros() {\n\tif (!outros.remaining) {\n\t\trun_all(outros.callbacks);\n\t}\n}\n\nfunction on_outro(callback) {\n\toutros.callbacks.push(callback);\n}\n\nfunction create_in_transition(node, fn, params) {\n\tlet config = fn(node, params);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = identity,\n\t\t\ttick: tick$$1 = noop,\n\t\t\tcss\n\t\t} = config;\n\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick$$1(0, 1);\n\n\t\tconst start_time = window.performance.now() + delay;\n\t\tconst end_time = start_time + duration;\n\n\t\tif (task) task.abort();\n\t\trunning = true;\n\n\t\ttask = loop(now => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick$$1(1, 0);\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn running = false;\n\t\t\t\t}\n\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick$$1(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tlet started = false;\n\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\n\t\t\tdelete_rule(node);\n\n\t\t\tif (typeof config === 'function') {\n\t\t\t\tconfig = config();\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction create_out_transition(node, fn, params) {\n\tlet config = fn(node, params);\n\tlet running = true;\n\tlet animation_name;\n\n\tconst group = outros;\n\n\tgroup.remaining += 1;\n\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = identity,\n\t\t\ttick: tick$$1 = noop,\n\t\t\tcss\n\t\t} = config;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = window.performance.now() + delay;\n\t\tconst end_time = start_time + duration;\n\n\t\tloop(now => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick$$1(0, 1);\n\n\t\t\t\t\tif (!--group.remaining) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.callbacks);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick$$1(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (typeof config === 'function') {\n\t\twait().then(() => {\n\t\t\tconfig = config();\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction create_bidirectional_transition(node, fn, params, intro) {\n\tlet config = fn(node, params);\n\n\tlet t = intro ? 0 : 1;\n\n\tlet running_program = null;\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\tfunction init(program, duration) {\n\t\tconst d = program.b - t;\n\t\tduration *= Math.abs(d);\n\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = identity,\n\t\t\ttick: tick$$1 = noop,\n\t\t\tcss\n\t\t} = config;\n\n\t\tconst program = {\n\t\t\tstart: window.performance.now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\tprogram.group = outros;\n\t\t\toutros.remaining += 1;\n\t\t}\n\n\t\tif (running_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\n\t\t\tif (b) tick$$1(0, 1);\n\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\n\t\t\tloop(now => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick$$1(t = running_program.b, 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.remaining) run_all(running_program.group.callbacks);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t}\n\n\t\t\t\t\telse if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick$$1(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\n\treturn {\n\t\trun(b) {\n\t\t\tif (typeof config === 'function') {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconfig = config();\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\nfunction handle_promise(promise, info) {\n\tconst token = info.token = {};\n\n\tfunction update(type, index, key, value) {\n\t\tif (info.token !== token) return;\n\n\t\tinfo.resolved = key && { [key]: value };\n\n\t\tconst child_ctx = assign(assign({}, info.ctx), info.resolved);\n\t\tconst block = type && (info.current = type)(child_ctx);\n\n\t\tif (info.block) {\n\t\t\tif (info.blocks) {\n\t\t\t\tinfo.blocks.forEach((block, i) => {\n\t\t\t\t\tif (i !== index && block) {\n\t\t\t\t\t\tgroup_outros();\n\t\t\t\t\t\ton_outro(() => {\n\t\t\t\t\t\t\tblock.d(1);\n\t\t\t\t\t\t\tinfo.blocks[i] = null;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tblock.o(1);\n\t\t\t\t\t\tcheck_outros();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tinfo.block.d(1);\n\t\t\t}\n\n\t\t\tblock.c();\n\t\t\tif (block.i) block.i(1);\n\t\t\tblock.m(info.mount(), info.anchor);\n\n\t\t\tflush();\n\t\t}\n\n\t\tinfo.block = block;\n\t\tif (info.blocks) info.blocks[index] = block;\n\t}\n\n\tif (is_promise(promise)) {\n\t\tpromise.then(value => {\n\t\t\tupdate(info.then, 1, info.value, value);\n\t\t}, error => {\n\t\t\tupdate(info.catch, 2, info.error, error);\n\t\t});\n\n\t\t// if we previously had a then/catch block, destroy it\n\t\tif (info.current !== info.pending) {\n\t\t\tupdate(info.pending, 0);\n\t\t\treturn true;\n\t\t}\n\t} else {\n\t\tif (info.current !== info.then) {\n\t\t\tupdate(info.then, 1, info.value, promise);\n\t\t\treturn true;\n\t\t}\n\n\t\tinfo.resolved = { [info.value]: promise };\n\t}\n}\n\nfunction destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\nfunction outro_and_destroy_block(block, lookup) {\n\ton_outro(() => {\n\t\tdestroy_block(block, lookup);\n\t});\n\n\tblock.o(1);\n}\n\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\tblock.p(changed, child_ctx);\n\t\t}\n\n\t\tnew_lookup.set(key, new_blocks[i] = block);\n\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\n\tfunction insert(block) {\n\t\tif (block.i) block.i(1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t}\n\n\t\telse if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t}\n\n\t\telse if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t}\n\n\t\telse if (did_move.has(old_key)) {\n\t\t\to--;\n\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\n\twhile (n) insert(new_blocks[n - 1]);\n\n\treturn new_blocks;\n}\n\nfunction measure(blocks) {\n\tconst rects = {};\n\tlet i = blocks.length;\n\twhile (i--) rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n\treturn rects;\n}\n\nfunction get_spread_update(levels, updates) {\n\tconst update = {};\n\n\tconst to_null_out = {};\n\tconst accounted_for = { $$scope: 1 };\n\n\tlet i = levels.length;\n\twhile (i--) {\n\t\tconst o = levels[i];\n\t\tconst n = updates[i];\n\n\t\tif (n) {\n\t\t\tfor (const key in o) {\n\t\t\t\tif (!(key in n)) to_null_out[key] = 1;\n\t\t\t}\n\n\t\t\tfor (const key in n) {\n\t\t\t\tif (!accounted_for[key]) {\n\t\t\t\t\tupdate[key] = n[key];\n\t\t\t\t\taccounted_for[key] = 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlevels[i] = n;\n\t\t} else {\n\t\t\tfor (const key in o) {\n\t\t\t\taccounted_for[key] = 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (const key in to_null_out) {\n\t\tif (!(key in update)) update[key] = undefined;\n\t}\n\n\treturn update;\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\n\nfunction spread(args) {\n\tconst attributes = Object.assign({}, ...args);\n\tlet str = '';\n\n\tObject.keys(attributes).forEach(name => {\n\t\tif (invalid_attribute_name_character.test(name)) return;\n\n\t\tconst value = attributes[name];\n\t\tif (value === undefined) return;\n\t\tif (value === true) str += \" \" + name;\n\n\t\tconst escaped = String(value)\n\t\t\t.replace(/\"/g, '&#34;')\n\t\t\t.replace(/'/g, '&#39;');\n\n\t\tstr += \" \" + name + \"=\" + JSON.stringify(escaped);\n\t});\n\n\treturn str;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t\"'\": '&#39;',\n\t'&': '&amp;',\n\t'<': '&lt;',\n\t'>': '&gt;'\n};\n\nfunction escape(html) {\n\treturn String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\n\nfunction each(items, fn) {\n\tlet str = '';\n\tfor (let i = 0; i < items.length; i += 1) {\n\t\tstr += fn(items[i], i);\n\t}\n\treturn str;\n}\n\nconst missing_component = {\n\t$$render: () => ''\n};\n\nfunction validate_component(component, name) {\n\tif (!component || !component.$$render) {\n\t\tif (name === 'svelte:component') name += ' this={...}';\n\t\tthrow new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n\t}\n\n\treturn component;\n}\n\nfunction debug(file, line, column, values) {\n\tconsole.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n\tconsole.log(values); // eslint-disable-line no-console\n\treturn '';\n}\n\nlet on_destroy;\n\nfunction create_ssr_component(fn) {\n\tfunction $$render(result, props, bindings, slots) {\n\t\tconst parent_component = current_component;\n\n\t\tconst $$ = {\n\t\t\ton_destroy,\n\t\t\tcontext: new Map(parent_component ? parent_component.$$.context : []),\n\n\t\t\t// these will be immediately discarded\n\t\t\ton_mount: [],\n\t\t\tbefore_render: [],\n\t\t\tafter_render: [],\n\t\t\tcallbacks: blank_object()\n\t\t};\n\n\t\tset_current_component({ $$ });\n\n\t\tconst html = fn(result, props, bindings, slots);\n\n\t\tset_current_component(parent_component);\n\t\treturn html;\n\t}\n\n\treturn {\n\t\trender: (props = {}, options = {}) => {\n\t\t\ton_destroy = [];\n\n\t\t\tconst result = { head: '', css: new Set() };\n\t\t\tconst html = $$render(result, props, {}, options);\n\n\t\t\trun_all(on_destroy);\n\n\t\t\treturn {\n\t\t\t\thtml,\n\t\t\t\tcss: {\n\t\t\t\t\tcode: Array.from(result.css).map(css => css.code).join('\\n'),\n\t\t\t\t\tmap: null // TODO\n\t\t\t\t},\n\t\t\t\thead: result.head\n\t\t\t};\n\t\t},\n\n\t\t$$render\n\t};\n}\n\nfunction get_store_value(store) {\n\tlet value;\n\tstore.subscribe(_ => value = _)();\n\treturn value;\n}\n\nfunction bind(component, name, callback) {\n\tif (component.$$.props.indexOf(name) === -1) return;\n\tcomponent.$$.bound[name] = callback;\n\tcallback(component.$$.ctx[name]);\n}\n\nfunction mount_component(component, target, anchor) {\n\tconst { fragment, on_mount, on_destroy, after_render } = component.$$;\n\n\tfragment.m(target, anchor);\n\n\t// onMount happens after the initial afterUpdate. Because\n\t// afterUpdate callbacks happen in reverse order (inner first)\n\t// we schedule onMount callbacks before afterUpdate callbacks\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = on_mount.map(run).filter(is_function);\n\t\tif (on_destroy) {\n\t\t\ton_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\n\tafter_render.forEach(add_render_callback);\n}\n\nfunction destroy(component, detaching) {\n\tif (component.$$) {\n\t\trun_all(component.$$.on_destroy);\n\t\tcomponent.$$.fragment.d(detaching);\n\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\tcomponent.$$.on_destroy = component.$$.fragment = null;\n\t\tcomponent.$$.ctx = {};\n\t}\n}\n\nfunction make_dirty(component, key) {\n\tif (!component.$$.dirty) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty = blank_object();\n\t}\n\tcomponent.$$.dirty[key] = true;\n}\n\nfunction init(component, options, instance, create_fragment, not_equal$$1, prop_names) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\n\tconst props = options.props || {};\n\n\tconst $$ = component.$$ = {\n\t\tfragment: null,\n\t\tctx: null,\n\n\t\t// state\n\t\tprops: prop_names,\n\t\tupdate: noop,\n\t\tnot_equal: not_equal$$1,\n\t\tbound: blank_object(),\n\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\tbefore_render: [],\n\t\tafter_render: [],\n\t\tcontext: new Map(parent_component ? parent_component.$$.context : []),\n\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty: null\n\t};\n\n\tlet ready = false;\n\n\t$$.ctx = instance\n\t\t? instance(component, props, (key, value) => {\n\t\t\tif ($$.ctx && not_equal$$1($$.ctx[key], $$.ctx[key] = value)) {\n\t\t\t\tif ($$.bound[key]) $$.bound[key](value);\n\t\t\t\tif (ready) make_dirty(component, key);\n\t\t\t}\n\t\t})\n\t\t: props;\n\n\t$$.update();\n\tready = true;\n\trun_all($$.before_render);\n\t$$.fragment = create_fragment($$.ctx);\n\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\t$$.fragment.l(children(options.target));\n\t\t} else {\n\t\t\t$$.fragment.c();\n\t\t}\n\n\t\tif (options.intro && component.$$.fragment.i) component.$$.fragment.i();\n\t\tmount_component(component, options.target, options.anchor);\n\t\tflush();\n\t}\n\n\tset_current_component(parent_component);\n}\n\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n\tSvelteElement = class extends HTMLElement {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t}\n\n\t\tconnectedCallback() {\n\t\t\tfor (const key in this.$$.slotted) {\n\t\t\t\tthis.appendChild(this.$$.slotted[key]);\n\t\t\t}\n\t\t}\n\n\t\tattributeChangedCallback(attr$$1, oldValue, newValue) {\n\t\t\tthis[attr$$1] = newValue;\n\t\t}\n\n\t\t$destroy() {\n\t\t\tdestroy(this, true);\n\t\t\tthis.$destroy = noop;\n\t\t}\n\n\t\t$on(type, callback) {\n\t\t\t// TODO should this delegate to addEventListener?\n\t\t\tconst callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n\t\t\tcallbacks.push(callback);\n\n\t\t\treturn () => {\n\t\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t\t};\n\t\t}\n\n\t\t$set() {\n\t\t\t// overridden by instance, if it has props\n\t\t}\n\t};\n}\n\nclass SvelteComponent {\n\t$destroy() {\n\t\tdestroy(this, true);\n\t\tthis.$destroy = noop;\n\t}\n\n\t$on(type, callback) {\n\t\tconst callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n\t\tcallbacks.push(callback);\n\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t$set() {\n\t\t// overridden by instance, if it has props\n\t}\n}\n\nclass SvelteComponentDev extends SvelteComponent {\n\tconstructor(options) {\n\t\tif (!options || (!options.target && !options.$$inline)) {\n\t\t\tthrow new Error(`'target' is a required option`);\n\t\t}\n\n\t\tsuper();\n\t}\n\n\t$destroy() {\n\t\tsuper.$destroy();\n\t\tthis.$destroy = () => {\n\t\t\tconsole.warn(`Component was already destroyed`); // eslint-disable-line no-console\n\t\t};\n\t}\n}\n\nexport { create_animation, fix_position, handle_promise, append, insert, detach, detach_between, detach_before, detach_after, destroy_each, element, object_without_properties, svg_element, text, space, empty, listen, prevent_default, stop_propagation, attr, set_attributes, set_custom_element_data, xlink_attr, get_binding_group_value, to_number, time_ranges_to_array, children, claim_element, claim_text, set_data, set_input_type, set_style, select_option, select_options, select_value, select_multiple_value, add_resize_listener, toggle_class, custom_event, destroy_block, outro_and_destroy_block, fix_and_outro_and_destroy_block, update_keyed_each, measure, current_component, set_current_component, beforeUpdate, onMount, afterUpdate, onDestroy, createEventDispatcher, setContext, getContext, bubble, clear_loops, loop, dirty_components, intros, schedule_update, tick, add_binding_callback, add_render_callback, add_flush_callback, flush, get_spread_update, invalid_attribute_name_character, spread, escaped, escape, each, missing_component, validate_component, debug, create_ssr_component, get_store_value, group_outros, check_outros, on_outro, create_in_transition, create_out_transition, create_bidirectional_transition, noop, identity, assign, is_promise, add_location, run, blank_object, run_all, is_function, safe_not_equal, not_equal, validate_store, subscribe, create_slot, get_slot_context, get_slot_changes, exclude_internal_props, bind, mount_component, init, SvelteElement, SvelteComponent, SvelteComponentDev };\n","function noop() {}\n\nfunction run(fn) {\n\treturn fn();\n}\n\nfunction run_all(fns) {\n\tfns.forEach(run);\n}\n\nfunction safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\n\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (!stop) {\n                return; // not ready\n            }\n            subscribers.forEach((s) => s[1]());\n            subscribers.forEach((s) => s[0](value));\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe$$1(run$$1, invalidate = noop) {\n        const subscriber = [run$$1, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run$$1(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n            }\n        };\n    }\n    return { set, update, subscribe: subscribe$$1 };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = result || noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\nfunction get(store) {\n    let value;\n    store.subscribe((_) => value = _)();\n    return value;\n}\n\nexport { readable, writable, derived, get };\n","const writable = require('svelte/store').writable\n\nconst router = writable({})\n\nfunction set(route) {\n  router.set(route)\n}\n\nfunction remove() {\n  router.set({})\n}\n\nconst activeRoute = {\n  subscribe: router.subscribe,\n  set,\n  remove\n}\n\nmodule.exports = { activeRoute }\n","const UrlParser = require(\"./url_parser\").UrlParser;\n\nmodule.exports = {\n  UrlParser\n};\n","const UrlParser = (urlString, namedUrl = \"\") => {\n  const urlBase = new URL(urlString);\n\n  /**\n   * Wrapper for URL.host\n   *\n   **/\n  function host() {\n    return urlBase.host;\n  }\n\n  /**\n   * Wrapper for URL.hostname\n   *\n   **/\n  function hostname() {\n    return urlBase.hostname;\n  }\n\n  /**\n   * Returns an object with all the named params and their values\n   *\n   **/\n  function namedParams() {\n    const allPathName = pathNames();\n    const allNamedParamsKeys = namedParamsWithIndex();\n\n    return allNamedParamsKeys.reduce((values, paramKey) => {\n      values[paramKey.value] = allPathName[paramKey.index];\n      return values;\n    }, {});\n  }\n\n  /**\n   * Returns an array with all the named param keys\n   *\n   **/\n  function namedParamsKeys() {\n    const allNamedParamsKeys = namedParamsWithIndex(namedUrl);\n\n    return allNamedParamsKeys.reduce((values, paramKey) => {\n      values.push(paramKey.value);\n      return values;\n    }, []);\n  }\n\n  /**\n   * Returns an array with all the named param values\n   *\n   **/\n  function namedParamsValues() {\n    const allPathName = pathNames();\n    const allNamedParamsKeys = namedParamsWithIndex();\n\n    return allNamedParamsKeys.reduce((values, paramKey) => {\n      values.push(allPathName[paramKey.index]);\n      return values;\n    }, []);\n  }\n\n  /**\n   * Returns an array with all named param ids and their position in the path\n   * Private\n   **/\n  function namedParamsWithIndex() {\n    const namedUrlParams = getPathNames(namedUrl);\n\n    return namedUrlParams.reduce((validParams, param, index) => {\n      if (param[0] === \":\") {\n        validParams.push({ value: param.slice(1), index });\n      }\n      return validParams;\n    }, []);\n  }\n\n  /**\n   * Wrapper for URL.port\n   *\n   **/\n  function port() {\n    return urlBase.port;\n  }\n\n  /**\n   * Wrapper for URL.pathname\n   *\n   **/\n  function pathname() {\n    return urlBase.pathname;\n  }\n\n  /**\n   * Wrapper for URL.protocol\n   *\n   **/\n  function protocol() {\n    return urlBase.protocol;\n  }\n\n  /**\n   * Wrapper for URL.search\n   *\n   **/\n  function search() {\n    return urlBase.search;\n  }\n\n  /**\n   * Returns an object with all query params and their values\n   *\n   **/\n  function queryParams() {\n    const params = {};\n    urlBase.searchParams.forEach((value, key) => {\n      params[key] = value;\n    });\n\n    return params;\n  }\n\n  /**\n   * Returns an array with all the query param keys\n   *\n   **/\n  function queryParamsKeys() {\n    const params = [];\n    urlBase.searchParams.forEach((_value, key) => {\n      params.push(key);\n    });\n\n    return params;\n  }\n\n  /**\n   * Returns an array with all the query param values\n   *\n   **/\n  function queryParamsValues() {\n    const params = [];\n    urlBase.searchParams.forEach(value => {\n      params.push(value);\n    });\n\n    return params;\n  }\n\n  /**\n   * Returns an array with all the elements of a pathname\n   *\n   **/\n  function pathNames() {\n    return getPathNames(urlBase.pathname);\n  }\n\n  /**\n   * Returns an array with all the parts of a pathname\n   * Private method\n   **/\n  function getPathNames(pathName) {\n    if (pathName === \"/\" || pathName.trim().length === 0) return [pathName];\n    if (pathName.slice(-1) === \"/\") {\n      pathName = pathName.slice(0, -1);\n    }\n    if (pathName[0] === \"/\") {\n      pathName = pathName.slice(1);\n    }\n\n    return pathName.split(\"/\");\n  }\n\n  return Object.freeze({\n    host: host(),\n    hostname: hostname(),\n    namedParams: namedParams(),\n    namedParamsKeys: namedParamsKeys(),\n    namedParamsValues: namedParamsValues(),\n    pathNames: pathNames(),\n    port: port(),\n    pathname: pathname(),\n    protocol: protocol(),\n    search: search(),\n    queryParams: queryParams(),\n    queryParamsKeys: queryParamsKeys(),\n    queryParamsValues: queryParamsValues()\n  });\n};\n\nmodule.exports = { UrlParser };\n","/**\n * Returns true if object has any nested routes empty\n * @param routeObject\n **/\nfunction anyEmptyNestedRoutes(routeObject) {\n  let result = false\n  if (Object.keys(routeObject).length === 0) {\n    return true\n  }\n\n  if (routeObject.childRoute && Object.keys(routeObject.childRoute).length === 0) {\n    result = true\n  } else if (routeObject.childRoute) {\n    result = anyEmptyNestedRoutes(routeObject.childRoute)\n  }\n\n  return result\n}\n\n/**\n * Compare two routes ignoring named params\n * @param pathName string\n * @param routeName string\n **/\n\nfunction compareRoutes(pathName, routeName) {\n  routeName = removeSlash(routeName)\n\n  if (routeName.includes(':')) {\n    return routeName.includes(pathName)\n  } else {\n    return routeName.startsWith(pathName)\n  }\n}\n\n/**\n * Returns a boolean indicating if the name of path exists in the route based on the language parameter\n * @param pathName string\n * @param route object\n * @param language string\n **/\n\nfunction findLocalisedRoute(pathName, route, language) {\n  let exists = false\n\n  if (language) {\n    return { exists: route.lang && route.lang[language] && route.lang[language].includes(pathName), language }\n  }\n\n  exists = compareRoutes(pathName, route.name)\n\n  if (!exists && route.lang && typeof route.lang === 'object') {\n    for (const [key, value] of Object.entries(route.lang)) {\n      if (compareRoutes(pathName, value)) {\n        exists = true\n        language = key\n      }\n    }\n  }\n\n  return { exists, language }\n}\n\n/**\n * Return all the consecutive named param (placeholders) of a pathname\n * @param pathname\n **/\nfunction getNamedParams(pathName = '') {\n  if (pathName.trim().length === 0) return []\n  const namedUrlParams = getPathNames(pathName)\n  return namedUrlParams.reduce((validParams, param) => {\n    if (param[0] === ':') {\n      validParams.push(param.slice(1))\n    }\n\n    return validParams\n  }, [])\n}\n\n/**\n * Split a pathname based on /\n * @param pathName\n * Private method\n **/\nfunction getPathNames(pathName) {\n  if (pathName === '/' || pathName.trim().length === 0) return [pathName]\n\n  pathName = removeSlash(pathName, 'both')\n\n  return pathName.split('/')\n}\n\n/**\n * Return the first part of a pathname until the first named param is found\n * @param name\n **/\nfunction nameToPath(name = '') {\n  let routeName\n  if (name === '/' || name.trim().length === 0) return name\n  name = removeSlash(name, 'lead')\n  routeName = name.split(':')[0]\n  routeName = removeSlash(routeName, 'trail')\n\n  return routeName.toLowerCase()\n}\n\n/**\n * Return the path name including query params\n * @param name\n **/\nfunction pathWithQueryParams(currentRoute) {\n  let queryParams = []\n  if (currentRoute.queryParams) {\n    for (let [key, value] of Object.entries(currentRoute.queryParams)) {\n      queryParams.push(`${key}=${value}`)\n    }\n  }\n\n  if (queryParams.length > 0) {\n    return `${currentRoute.path}?${queryParams.join('&')}`\n  } else {\n    return currentRoute.path\n  }\n}\n\n/**\n * Returns a string with trailing or leading slash character removed\n * @param pathName string\n * @param position string - lead, trail, both\n **/\nfunction removeExtraPaths(pathNames, basePathNames) {\n  const names = basePathNames.split('/')\n  if (names.length > 1) {\n    names.forEach(function(name, index) {\n      if (name.length > 0 && index > 0) {\n        pathNames.shift()\n      }\n    })\n  }\n\n  return pathNames\n}\n\n/**\n * Returns a string with trailing or leading slash character removed\n * @param pathName string\n * @param position string - lead, trail, both\n **/\n\nfunction removeSlash(pathName, position = 'lead') {\n  if (pathName.trim().length < 1) {\n    return ''\n  }\n\n  if (position === 'trail' || position === 'both') {\n    if (pathName.slice(-1) === '/') {\n      pathName = pathName.slice(0, -1)\n    }\n  }\n\n  if (position === 'lead' || position === 'both') {\n    if (pathName[0] === '/') {\n      pathName = pathName.slice(1)\n    }\n  }\n\n  return pathName\n}\n\n/**\n * Returns the name of the route based on the language parameter\n * @param route object\n * @param language string\n **/\n\nfunction routeNameLocalised(route, language = null) {\n  if (!language || !route.lang || !route.lang[language]) {\n    return route.name\n  } else {\n    return route.lang[language]\n  }\n}\n\n/**\n * Updates the base route path.\n * Route objects can have nested routes (childRoutes) or just a long name like \"admin/employees/show/:id\"\n *\n * @param basePath string\n * @param pathNames array\n * @param route object\n * @param language string\n **/\n\nfunction updateRoutePath(basePath, pathNames, route, language, convert = false) {\n  if (basePath === '/' || basePath.trim().length === 0) return { result: basePath, language: null }\n\n  let basePathResult = basePath\n  let routeName = route.name\n  let currentLanguage = language\n\n  if (convert) {\n    currentLanguage = ''\n  }\n\n  routeName = removeSlash(routeName)\n  basePathResult = removeSlash(basePathResult)\n\n  if (!route.childRoute) {\n    let localisedRoute = findLocalisedRoute(basePathResult, route, currentLanguage)\n\n    if (localisedRoute.exists && convert) {\n      basePathResult = routeNameLocalised(route, language)\n    }\n\n    let routeNames = routeName.split(':')[0]\n    routeNames = removeSlash(routeNames, 'trail')\n    routeNames = routeNames.split('/')\n    routeNames.shift()\n    routeNames.forEach(() => {\n      const currentPathName = pathNames[0]\n      localisedRoute = findLocalisedRoute(`${basePathResult}/${currentPathName}`, route, currentLanguage)\n\n      if (currentPathName && localisedRoute.exists) {\n        if (convert) {\n          basePathResult = routeNameLocalised(route, language)\n        } else {\n          basePathResult = `${basePathResult}/${currentPathName}`\n        }\n        pathNames.shift()\n      } else {\n        return { result: basePathResult, language: localisedRoute.language }\n      }\n    })\n    return { result: basePathResult, language: localisedRoute.language }\n  } else {\n    return { result: basePath, language: currentLanguage }\n  }\n}\n\nmodule.exports = {\n  anyEmptyNestedRoutes,\n  compareRoutes,\n  findLocalisedRoute,\n  getNamedParams,\n  getPathNames,\n  nameToPath,\n  pathWithQueryParams,\n  removeExtraPaths,\n  removeSlash,\n  routeNameLocalised,\n  updateRoutePath\n}\n","const { UrlParser } = require('url-params-parser')\n\nconst { pathWithQueryParams, removeSlash } = require('../lib/utils')\n\nfunction RouterCurrent(trackPage) {\n  const trackPageview = trackPage || false\n  let activeRoute = ''\n\n  function setActive(newRoute) {\n    activeRoute = newRoute.path\n    pushActiveRoute(newRoute)\n  }\n\n  function active() {\n    return activeRoute\n  }\n\n  /**\n   * Returns true if pathName is current active route\n   * @param pathName String The path name to check against the current route.\n   * @param includePath Boolean if true checks that pathName is included in current route. If false should match it.\n   **/\n  function isActive(queryPath, includePath = false) {\n    if (queryPath[0] !== '/') {\n      queryPath = '/' + queryPath\n    }\n\n    // remove query params for comparison\n    let pathName = UrlParser(`http://fake.com${queryPath}`).pathname\n    let activeRoutePath = UrlParser(`http://fake.com${activeRoute}`).pathname\n\n    pathName = removeSlash(pathName, 'trail')\n\n    activeRoutePath = removeSlash(activeRoutePath, 'trail')\n\n    if (includePath) {\n      return activeRoutePath.includes(pathName)\n    } else {\n      return activeRoutePath === pathName\n    }\n  }\n\n  function pushActiveRoute(newRoute) {\n    if (typeof window !== 'undefined') {\n      const pathAndSearch = pathWithQueryParams(newRoute)\n      window.history.pushState({ page: pathAndSearch }, '', pathAndSearch)\n      if (trackPageview) {\n        gaTracking(pathAndSearch)\n      }\n    }\n  }\n\n  function gaTracking(newPage) {\n    if (typeof ga !== 'undefined') {\n      ga('set', 'page', newPage)\n      ga('send', 'pageview')\n    }\n  }\n\n  return Object.freeze({ active, isActive, setActive })\n}\n\nmodule.exports = { RouterCurrent }\n","function RouterGuard(onlyIf) {\n  const guardInfo = onlyIf\n\n  function valid() {\n    return guardInfo && guardInfo.guard && typeof guardInfo.guard === 'function'\n  }\n\n  function redirect() {\n    return !guardInfo.guard()\n  }\n\n  function redirectPath() {\n    let destinationUrl = '/'\n    if (guardInfo.redirect && guardInfo.redirect.length > 0) {\n      destinationUrl = guardInfo.redirect\n    }\n\n    return destinationUrl\n  }\n\n  return Object.freeze({ valid, redirect, redirectPath })\n}\n\nmodule.exports = { RouterGuard }\n","const { RouterGuard } = require('./guard')\n\nfunction RouterRedirect(route, currentPath) {\n  const guard = RouterGuard(route.onlyIf)\n\n  function path() {\n    let redirectTo = currentPath\n    if (route.redirectTo && route.redirectTo.length > 0) {\n      redirectTo = route.redirectTo\n    }\n\n    if (guard.valid() && guard.redirect()) {\n      redirectTo = guard.redirectPath()\n    }\n\n    return redirectTo\n  }\n\n  return Object.freeze({ path })\n}\n\nmodule.exports = { RouterRedirect }\n","const { UrlParser } = require('url-params-parser')\n\nfunction RouterRoute({ routeInfo, path, routeNamedParams, urlParser, namedPath, language }) {\n  function namedParams() {\n    const parsedParams = UrlParser(`https://fake.com${urlParser.pathname}`, namedPath).namedParams\n\n    return { ...routeNamedParams, ...parsedParams }\n  }\n\n  function get() {\n    return {\n      name: path,\n      component: routeInfo.component,\n      layout: routeInfo.layout,\n      queryParams: urlParser.queryParams,\n      namedParams: namedParams(),\n      path,\n      language\n    }\n  }\n\n  return Object.freeze({ get, namedParams })\n}\n\nmodule.exports = { RouterRoute }\n","const { updateRoutePath, getNamedParams, nameToPath, removeExtraPaths, routeNameLocalised } = require('../lib/utils')\n\nfunction RouterPath({ basePath, basePathName, pathNames, convert, currentLanguage }) {\n  let updatedPathRoute\n  let route\n  let routePathLanguage = currentLanguage\n\n  function updatedPath(currentRoute) {\n    route = currentRoute\n    updatedPathRoute = updateRoutePath(basePathName, pathNames, route, routePathLanguage, convert)\n    routePathLanguage = convert ? currentLanguage : updatedPathRoute.language\n\n    return updatedPathRoute\n  }\n\n  function localisedPathName() {\n    return routeNameLocalised(route, routePathLanguage)\n  }\n\n  function localisedRouteWithoutNamedParams() {\n    return nameToPath(localisedPathName())\n  }\n\n  function basePathNameWithoutNamedParams() {\n    return nameToPath(updatedPathRoute.result)\n  }\n\n  function namedPath() {\n    const localisedPath = localisedPathName()\n\n    return basePath ? `${basePath}/${localisedPath}` : localisedPath\n  }\n\n  function routePath() {\n    let routePathValue = `${basePath}/${basePathNameWithoutNamedParams()}`\n    if (routePathValue === '//') {\n      routePathValue = '/'\n    }\n\n    if (routePathLanguage) {\n      pathNames = removeExtraPaths(pathNames, localisedRouteWithoutNamedParams())\n    }\n\n    const namedParams = getNamedParams(localisedPathName())\n    if (namedParams && namedParams.length > 0) {\n      namedParams.forEach(function() {\n        if (pathNames.length > 0) {\n          routePathValue += `/${pathNames.shift()}`\n        }\n      })\n    }\n\n    return routePathValue\n  }\n\n  function routeLanguage() {\n    return routePathLanguage\n  }\n\n  function basePathSameAsLocalised() {\n    return basePathNameWithoutNamedParams() === localisedRouteWithoutNamedParams()\n  }\n\n  return Object.freeze({\n    basePathSameAsLocalised,\n    updatedPath,\n    basePathNameWithoutNamedParams,\n    localisedPathName,\n    localisedRouteWithoutNamedParams,\n    namedPath,\n    pathNames,\n    routeLanguage,\n    routePath\n  })\n}\n\nmodule.exports = { RouterPath }\n","const { UrlParser } = require('url-params-parser')\n\nconst { RouterRedirect } = require('./redirect')\nconst { RouterRoute } = require('./route')\nconst { RouterPath } = require('./path')\nconst { anyEmptyNestedRoutes, pathWithQueryParams } = require('../lib/utils')\n\nconst NotFoundPage = '/404.html'\n\nfunction RouterFinder(routes, currentUrl, language, convert) {\n  let redirectTo = ''\n  let routeNamedParams = {}\n  const urlParser = UrlParser(currentUrl)\n\n  function findActiveRoute() {\n    let searchActiveRoute = searchActiveRoutes(routes, '', urlParser.pathNames, language, convert)\n\n    if (!searchActiveRoute || !Object.keys(searchActiveRoute).length || anyEmptyNestedRoutes(searchActiveRoute)) {\n      if (typeof window !== 'undefined') {\n        searchActiveRoute = { name: '404', component: '', path: '404', redirectTo: NotFoundPage }\n      }\n    } else {\n      searchActiveRoute.path = pathWithQueryParams(searchActiveRoute)\n    }\n\n    return searchActiveRoute\n  }\n\n  /**\n   * Gets an array of routes and the browser pathname and return the active route\n   * @param routes\n   * @param basePath\n   * @param pathNames\n   **/\n  function searchActiveRoutes(routes, basePath, pathNames, currentLanguage, convert) {\n    let currentRoute = {}\n    let basePathName = pathNames.shift().toLowerCase()\n    const routerPath = RouterPath({ basePath, basePathName, pathNames, convert, currentLanguage })\n\n    routes.forEach(function(route) {\n      routerPath.updatedPath(route)\n      if (routerPath.basePathSameAsLocalised()) {\n        let routePath = routerPath.routePath()\n\n        redirectTo = RouterRedirect(route, redirectTo).path()\n\n        if (currentRoute.name !== routePath) {\n          currentRoute = setCurrentRoute({\n            route,\n            routePath,\n            routeLanguage: routerPath.routeLanguage(),\n            urlParser,\n            namedPath: routerPath.namedPath()\n          })\n        }\n\n        if (route.nestedRoutes && route.nestedRoutes.length > 0 && routerPath.pathNames.length > 0) {\n          currentRoute.childRoute = searchActiveRoutes(\n            route.nestedRoutes,\n            routePath,\n            routerPath.pathNames,\n            routerPath.routeLanguage(),\n            convert\n          )\n          currentRoute.path = currentRoute.childRoute.path\n          currentRoute.language = currentRoute.childRoute.language\n        } else if (nestedRoutesAndNoPath(route, routerPath.pathNames)) {\n          const indexRoute = searchActiveRoutes(\n            route.nestedRoutes,\n            routePath,\n            ['index'],\n            routerPath.routeLanguage(),\n            convert\n          )\n          if (indexRoute && Object.keys(indexRoute).length > 0) {\n            currentRoute.childRoute = indexRoute\n            currentRoute.language = currentRoute.childRoute.language\n          }\n        }\n      }\n    })\n\n    if (redirectTo) {\n      currentRoute.redirectTo = redirectTo\n    }\n\n    return currentRoute\n  }\n\n  function nestedRoutesAndNoPath(route, pathNames) {\n    return route.nestedRoutes && route.nestedRoutes.length > 0 && pathNames.length === 0\n  }\n\n  function setCurrentRoute({ route, routePath, routeLanguage, urlParser, namedPath }) {\n    const routerRoute = RouterRoute({\n      routeInfo: route,\n      urlParser,\n      path: routePath,\n      routeNamedParams,\n      namedPath,\n      language: routeLanguage\n    })\n    routeNamedParams = routerRoute.namedParams()\n\n    return routerRoute.get()\n  }\n\n  return Object.freeze({ findActiveRoute })\n}\n\nmodule.exports = { RouterFinder }\n","const { activeRoute } = require('./store')\nconst { RouterCurrent } = require('./router/current')\nconst { RouterFinder } = require('./router/finder')\nconst { removeSlash } = require('./lib/utils')\n\nconst NotFoundPage = '/404.html'\n\nlet userDefinedRoutes = []\nlet routerOptions = {}\nlet routerCurrent\n\n/**\n * Object exposes one single property: activeRoute\n * @param routes  Array of routes\n * @param currentUrl current url\n * @param options configuration options\n **/\nfunction SpaRouter(routes, currentUrl, options = {}) {\n  routerOptions = { ...options }\n  if (typeof currentUrl === 'undefined' || currentUrl === '') {\n    currentUrl = document.location.href\n  }\n\n  routerCurrent = RouterCurrent(routerOptions.gaPageviews)\n\n  currentUrl = removeSlash(currentUrl, 'trail')\n  userDefinedRoutes = routes\n\n  function findActiveRoute() {\n    let convert = false\n\n    if (routerOptions.langConvertTo) {\n      routerOptions.lang = routerOptions.langConvertTo\n      convert = true\n    }\n\n    return RouterFinder(routes, currentUrl, routerOptions.lang, convert).findActiveRoute()\n  }\n\n  /**\n   * Redirect current route to another\n   * @param destinationUrl\n   **/\n  function navigateNow(destinationUrl) {\n    if (typeof window !== 'undefined') {\n      if (destinationUrl === NotFoundPage) {\n        routerCurrent.setActive({ path: NotFoundPage })\n      } else {\n        navigateTo(destinationUrl)\n      }\n    }\n\n    return destinationUrl\n  }\n\n  function setActiveRoute() {\n    const currentRoute = findActiveRoute()\n    if (currentRoute.redirectTo) {\n      return navigateNow(currentRoute.redirectTo)\n    }\n\n    routerCurrent.setActive(currentRoute)\n    activeRoute.set(currentRoute)\n\n    return currentRoute\n  }\n\n  return Object.freeze({\n    setActiveRoute,\n    findActiveRoute\n  })\n}\n\n/**\n * Converts a route to its localised version\n * @param pathName\n **/\nfunction localisedRoute(pathName, language) {\n  pathName = removeSlash(pathName, 'lead')\n  routerOptions.langConvertTo = language\n\n  return SpaRouter(userDefinedRoutes, 'http://fake.com/' + pathName, routerOptions).findActiveRoute()\n}\n\n/**\n * Updates the current active route and updates the browser pathname\n * @param pathName String\n * @param language String\n **/\nfunction navigateTo(pathName, language = null) {\n  pathName = removeSlash(pathName, 'lead')\n\n  if (language) {\n    routerOptions.langConvertTo = language\n  }\n  const activeRoute = SpaRouter(userDefinedRoutes, 'http://fake.com/' + pathName, routerOptions).setActiveRoute()\n\n  return activeRoute\n}\n\n/**\n * Returns true if pathName is current active route\n * @param pathName String The path name to check against the current route.\n * @param includePath Boolean if true checks that pathName is included in current route. If false should match it.\n **/\nfunction routeIsActive(queryPath, includePath = false) {\n  return routerCurrent.isActive(queryPath, includePath)\n}\n\nif (typeof window !== 'undefined') {\n  // Avoid full page reload on local routes\n  window.addEventListener('click', event => {\n    if (event.target.pathname && event.target.hostname === window.location.hostname && event.target.localName === 'a') {\n      event.preventDefault()\n      // event.stopPropagation()\n      navigateTo(event.target.pathname + event.target.search)\n    }\n  })\n\n  window.onpopstate = function(_event) {\n    navigateTo(window.location.pathname + window.location.search)\n  }\n}\n\nmodule.exports = { SpaRouter, localisedRoute, navigateTo, routeIsActive }\n","<script>\n  export let currentRoute = {}\n  export let params = {}\n</script>\n\n{#if currentRoute.layout}\n  <svelte:component this={currentRoute.layout} currentRoute={{ ...currentRoute, layout: '' }} {params} />\n{:else if currentRoute.component}\n  <svelte:component this={currentRoute.component} currentRoute={{ ...currentRoute, component: '' }} {params} />\n{:else if currentRoute.childRoute}\n  <svelte:self currentRoute={currentRoute.childRoute} {params} />\n{/if}\n","<script>\n  import { onMount } from 'svelte'\n\n  import { SpaRouter } from '../spa_router'\n  import Route from './route.svelte'\n  import { activeRoute } from '../store'\n\n  export let routes = []\n  export let options = {}\n\n  onMount(function() {\n    SpaRouter(routes, document.location.href, options).setActiveRoute()\n  })\n</script>\n\n<Route currentRoute={$activeRoute} />\n","<script>\n  import { onMount } from 'svelte'\n  import { localisedRoute, navigateTo, routeIsActive } from '../spa_router'\n  export let to = '/'\n  export let title = ''\n  export let styles = ''\n  export let lang = null\n\n  onMount(function() {\n    if (lang) {\n      const route = localisedRoute(to, lang)\n      if (route) {\n        to = route.path\n      }\n    }\n  })\n\n  function navigate(event) {\n    event.preventDefault()\n    event.stopPropagation()\n    navigateTo(to)\n  }\n</script>\n\n<a href={to} {title} on:click={navigate} class={styles} class:active={routeIsActive(to)}>\n  <slot />\n</a>\n","const { SpaRouter, navigateTo, localisedRoute, routeIsActive } = require('./spa_router')\nconst Route = require('./components/route.svelte')\nconst Router = require('./components/router.svelte')\nconst Navigate = require('./components/navigate.svelte')\n\nmodule.exports = {\n  SpaRouter,\n  localisedRoute,\n  navigateTo,\n  routeIsActive,\n  Route,\n  Router,\n  Navigate\n}\n","import Construction from \"./pages/Construction.svelte\"\n\nconst routes =[\n    {name:'/',component:Construction},\n]\n\nexport { routes }","<script>\nimport { Router } from 'svelte-router-spa'\nimport { routes } from './route.js'\n</script>\n<style lang=\"text/postcss\">\n\n</style>\n<Router { routes } />","import './main.pcss';\nimport App from './App.svelte';\n\nconst app = new App({\n    target: document.body\n});"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","get_slot_context","definition","ctx","$$scope","insert","target","node","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","empty","data","createTextNode","toggle_class","toggle","classList","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","resolved_promise","Promise","resolve","update_scheduled","binding_callbacks","render_callbacks","flush_callbacks","add_render_callback","flush","seen_callbacks","Set","length","shift","update","callback","pop","has","add","fragment","dirty","before_render","p","after_render","outros","group_outros","remaining","callbacks","check_outros","on_outro","mount_component","on_destroy","m","new_on_destroy","map","filter","make_dirty","key","then","init","options","instance","create_fragment","not_equal$$1","prop_names","parent_component","props","not_equal","bound","context","Map","ready","value","hydrate","l","Array","from","childNodes","c","intro","i","SvelteComponent","[object Object]","detaching","this","d","$destroy","type","index","indexOf","splice","readable","start","subscribe","writable","stop","subscribers","set","new_value","s","run$$1","invalidate","subscriber","router","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","result","unsubscribers","store","_","activeRoute","route","remove","urlString","namedUrl","urlBase","URL","namedParamsWithIndex","getPathNames","reduce","validParams","param","slice","pathNames","pathname","pathName","trim","split","freeze","host","hostname","namedParams","allPathName","paramKey","namedParamsKeys","namedParamsValues","port","protocol","search","queryParams","params","searchParams","queryParamsKeys","_value","queryParamsValues","compareRoutes","routeName","removeSlash","includes","startsWith","findLocalisedRoute","language","exists","lang","entries","position","routeNameLocalised","anyEmptyNestedRoutes","routeObject","keys","childRoute","getNamedParams","nameToPath","toLowerCase","pathWithQueryParams","currentRoute","path","join","removeExtraPaths","basePathNames","names","updateRoutePath","basePath","convert","basePathResult","currentLanguage","localisedRoute","routeNames","currentPathName","UrlParser","require$$0","require$$1","RouterCurrent","trackPage","trackPageview","active","isActive","queryPath","includePath","activeRoutePath","setActive","newRoute","window","pathAndSearch","history","pushState","page","newPage","ga","pushActiveRoute","RouterGuard","onlyIf","guardInfo","valid","guard","redirect","redirectPath","destinationUrl","RouterRedirect","currentPath","redirectTo","RouterRoute","routeInfo","routeNamedParams","urlParser","namedPath","parsedParams","get","layout","RouterPath","basePathName","updatedPathRoute","routePathLanguage","localisedPathName","localisedRouteWithoutNamedParams","basePathNameWithoutNamedParams","basePathSameAsLocalised","updatedPath","localisedPath","routeLanguage","routePath","routePathValue","require$$2","require$$3","require$$4","NotFoundPage","RouterFinder","routes","currentUrl","findActiveRoute","searchActiveRoute","searchActiveRoutes","routerPath","routerRoute","setCurrentRoute","nestedRoutes","nestedRoutesAndNoPath","indexRoute","routerCurrent","userDefinedRoutes","routerOptions","SpaRouter","langConvertTo","location","href","gaPageviews","setActiveRoute","navigateTo","addEventListener","event","localName","preventDefault","onpopstate","_event","routeIsActive","$activeRoute","unsub","unsubscribe","slot_ctx","handler","to","title","styles","navigate","removeEventListener","changed","stopPropagation","Route","Router","Navigate","body"],"mappings":"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"}